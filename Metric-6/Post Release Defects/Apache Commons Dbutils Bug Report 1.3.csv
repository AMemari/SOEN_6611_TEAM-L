Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Due Date,Votes,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Attachment,Attachment,Attachment,Custom field (Attachment count),Custom field (Blog - New Blog Administrators),Custom field (Blog - New Blog PMC),Custom field (Blog - Write access),Custom field (Blog Administrator?),Custom field (Blogs - Admin for blog),Custom field (Blogs - Email Address),Custom field (Blogs - Existing Blog Access Level),Custom field (Blogs - Existing Blog Name),Custom field (Blogs - New Blog Write Access),Custom field (Blogs - Username),Custom field (Bug Category),Custom field (Bugzilla - Email Notification Address),Custom field (Bugzilla - List of usernames),Custom field (Bugzilla - PMC Name),Custom field (Bugzilla - Project Name),Custom field (Bugzilla Id),Custom field (Change Category),Custom field (Complexity),Custom field (Date of First Response),Custom field (Discovered By),Custom field (Docs Text),Custom field (Enable Automatic Patch Review),Custom field (Epic Link),Custom field (Existing GitBox Approval),Custom field (External issue ID),Custom field (External issue URL),Custom field (Git Notification Mailing List),Custom field (Git Repository Import Path),Custom field (Git Repository Name),Custom field (Git Repository Type),Custom field (GitHub Options),Custom field (Github Integration),Custom field (Github Integrations - Other),Custom field (Global Rank),Custom field (INFRA - Subversion Repository Path),Custom field (Initial Confluence Contributors),Custom field (Last public comment date),Custom field (Machine Readable Info),Custom field (New-TLP-TLPName),Custom field (Priority),Custom field (Project),Custom field (Protected Branch),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Severity),Custom field (Severity),Custom field (Source Control Link),Custom field (Space Description),Custom field (Space Key),Custom field (Space Name),Custom field (Test and Documentation Plan),Custom field (Testcase included),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
"""drop view"" does not work from QueryRunner.update with SQLServer JDBC drivers.  Same SQL works with a PreparedStatement just fine.",DBUTILS-77,12514121,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Major,Invalid,,eakerma,eakerma,14/Jul/11 20:18,21/Nov/11 16:02,08/Jun/19 23:43,21/Nov/11 16:02,1.3,,,1.5,,0,,"Java environment: Java 6 on Redhat Linux
Database enviroment: SQLServer 2008
",,,,,,,,,15/Nov/11 14:39;wspeirs;DBUTILS-77v1.diff;https://issues.apache.org/jira/secure/attachment/12503744/DBUTILS-77v1.diff,,,1.0,,,,,,,,,,,,,,,,,,,2011-07-29 00:46:27.753,,,false,,,,,,,,,,,,60601,,,Mon Nov 21 16:02:20 UTC 2011,,,,,,0|i0uwuv:,178464,,,,,,,,,29/Jul/11 00:46;wspeirs;Are you seeing any exceptions?,10/Nov/11 19:35;bayard;Seems like a great one to get released in the next one. Michael - are you still around and able to provide any more info?,"14/Nov/11 15:15;eakerma;Yes, I'll recreate it and see what I can report.  I don't recall exceptions, I think it was an error code.","14/Nov/11 15:36;eakerma;Yes, sorry there was an exception:

Exception in thread ""main"" java.sql.SQLException: com.microsoft.sqlserver.jdbc.SQLServerException: Unable to identify the table drop view sqlapps.rso_current_person for the metadata. Query: drop view sqlapps.rso_current_person Parameters: []
        at org.apache.commons.dbutils.QueryRunner.rethrow(QueryRunner.java:540)
        at org.apache.commons.dbutils.QueryRunner.update(QueryRunner.java:597)
","14/Nov/11 15:38;eakerma;Here's the code that fails to run the SQL for me:

			final QueryRunner qr = new QueryRunner();
			final int rows = qr.update( con, sql, args );
			return rows;

Here's code that works:
			final PreparedStatement psm = con.prepareStatement( sql );
			for ( int i=1; i <= args.length; i++ )
			{
				psm.setString( i, args[i].toString() );
			}
			int rows = psm.executeUpdate();
			psm.close();
			return rows;","14/Nov/11 15:48;eakerma;The first stack trace was from the 1.2 version.  Here's the stack trace from 1.4.

Exception in thread ""main"" java.sql.SQLException: com.microsoft.sqlserver.jdbc.SQLServerException: Unable to identify the table drop view sqlapps.rso_current_person for the metadata. Query: drop view sqlapps.rso_current_person Parameters: []
        at org.apache.commons.dbutils.AbstractQueryRunner.rethrow(AbstractQueryRunner.java:320)
        at org.apache.commons.dbutils.QueryRunner.update(QueryRunner.java:489)
        at org.apache.commons.dbutils.QueryRunner.update(QueryRunner.java:402)
        at edu.uark.util.ConnectionUtils.execute(ConnectionUtils.java:64)
        at edu.uark.util.queryrunner.Main.main(Main.java:64)
","14/Nov/11 15:56;eakerma;Here is the inner SQLException:
com.microsoft.sqlserver.jdbc.SQLServerException: com.microsoft.sqlserver.jdbc.SQLServerException: Unable to identify the table drop view sqlapps.rso_current_person for the metadata.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:171)
	at com.microsoft.sqlserver.jdbc.SQLServerParameterMetaData.(SQLServerParameterMetaData.java:426)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.getParameterMetaData(SQLServerPreparedStatement.java:1510)
	at org.apache.commons.dbutils.AbstractQueryRunner.fillStatement(AbstractQueryRunner.java:172)
	at org.apache.commons.dbutils.QueryRunner.update(QueryRunner.java:485)
	at org.apache.commons.dbutils.QueryRunner.update(QueryRunner.java:402)
	at edu.uark.util.ConnectionUtils.execute(ConnectionUtils.java:66)
	at edu.uark.util.queryrunner.Main.main(Main.java:64)
","14/Nov/11 16:19;wspeirs;Michael, can you try it again but construct QueryRunner as follows: QueryRunner(true);

The line which is causing the exception is an attempt to get meta data: stmt.getParameterMetaData(); using the QueryRunner(true) constructor will prevent this code from being run. Thanks...
","14/Nov/11 16:33;eakerma;			final QueryRunner qr = new QueryRunner(true);

Solves the problem.  However this doesn't match the documentation of what that feature is meant for.

Also, I think we might need:
catch (SQLException e) {
                            pmdKnownBroken = true;
                       }

In AbstractQueryRunner.java somewhere around line 172.","14/Nov/11 16:41;wspeirs;Agreed, the documentation should be updated to better explain what the ""workaround"" is actually doing, and that other JDBC Drivers might want to use it as well.

I wouldn't rush to add that line to AbstractQueryRunner however. If you have a bad SQL statement, you'll be turning off the use of getParameterMetaData() when it might actually be useful with later requests.

I'd propose only an update to documentation for this one...",15/Nov/11 14:39;wspeirs;Updated documentation to better explain what the pmdKnownBroken parameter does,21/Nov/11 16:02;wspeirs;Documentation change submitted in r1204562.
DbUtils.loadDriver catches Throwable,DBUTILS-80,12523786,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Major,Fixed,,sebb,sebb,20/Sep/11 21:20,10/Nov/11 18:07,08/Jun/19 23:43,22/Sep/11 11:02,1.3,,,,,0,"DbUtils.loadDriver catches Throwable, which is a very bad idea.

It should just catch Exception.

Suggested patch to follow (also simplifies code)",,,,,,,,,,20/Sep/11 21:22;sebb;dbutils-80.patch;https://issues.apache.org/jira/secure/attachment/12495272/dbutils-80.patch,,,1.0,,,,,,,,,,,,,,,,,,,2011-09-22 08:20:37.707,,,false,,,,,,,,,,,,19392,,,Thu Sep 22 08:20:37 UTC 2011,,,,,,0|i0uvpr:,178279,,,,,,,,,"22/Sep/11 08:20;simone.tripodi;my position is +1 for applying the patch
",,,,,,,,,,,
fillStatement doesn't complain when there are too few parameters,DBUTILS-79,12515778,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Major,Fixed,,wspeirs,wspeirs,29/Jul/11 13:57,16/Aug/11 05:52,08/Jun/19 23:43,16/Aug/11 05:52,1.3,,,1.4,,0,"Unless I'm reading the code incorrectly, it appears that the fillStatement function does not complain if you provide too few parameters. For example, if you supply an SQL statement like: select * from blah where ? = ?; but only provide a single parameter ""test"", fillStatement returns without issue. However, only the first ? is actually set.

Granted, this will almost always cause an exception to be thrown by the driver, but since there is already a check for too many parameters, why not check for too few as well?

(FYI: I came across this bug, and a few others in my AsyncQueryRunner implementation, while re-writing the unit tests to use Mockito.)",,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-08-16 05:52:39.554,,,false,,,,,,,,,,,,64966,,,Tue Aug 16 05:52:39 UTC 2011,,,,,,0|i0uvun:,178301,,,,,,,,,"30/Jul/11 15:17;wspeirs;See DBUTILS-78, it has an updated version of the fillStatement function which properly checks to see that the number of parameters passed in matches the number of parameters required by the statement.","12/Aug/11 15:14;wspeirs;If the latest patch I submitted to DBUTILS-78 is applied, it takes care of this issue.",16/Aug/11 05:52;bayard;Resolved in r1158109 per your patch in DBUTILS-78.,,,,,,,,,
Duplicate code introduced during Java 1.5 branch merge,DBUTILS-65,12441965,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Major,Fixed,,brandon.n.atkinson,brandon.n.atkinson,30/Nov/09 15:51,10/Apr/11 05:03,08/Jun/19 23:43,10/Apr/11 05:03,1.3,,,1.4,,1,"The merge of Java 1.5 code into the main line introduced duplicate code in at least one place (BeanProcessor.java).

My guess is that some patches were applied to both the trunk and 1.5 branch during development.  When the merge occurred, the patches contents were duplicated.

I haven't analyzed all files for duplicate code, but I will be attaching a patch for the BeanProcessor class.",,,,,,,,,,30/Nov/09 15:52;brandon.n.atkinson;BeanProcessor-patch.diff;https://issues.apache.org/jira/secure/attachment/12426417/BeanProcessor-patch.diff,,,1.0,,,,,,,,,,,,,,,,,,,2011-04-10 05:02:38.899,,,false,,,,,,,,,,,,114711,,,Sun Apr 10 05:02:38 UTC 2011,,,,,,0|i0uvm7:,178263,,,,,,,,,30/Nov/09 15:52;brandon.n.atkinson;Remove duplicated code in BeanProcessor#processColumn ,"10/Apr/11 05:02;bayard;Thanks, I've applied the patch.",,,,,,,,,,
insert error,DBUTILS-71,12469775,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Major,Fixed,,hunshencinao,hunshencinao,21/Jul/10 06:07,02/Aug/10 01:28,08/Jun/19 23:43,02/Aug/10 01:26,1.3,,,,,0,"i have a table maintances(id,tr_userid,trouble,tr_time),id is autoincrement.when i use code below insert into table
QueryRunner runner = new QueryRunner();
runner.update(conn,""INSERT INTO maintances(tr_userid,trouble,tr_time) values(?,?,?)"",1,""2"",""2009-01-01"");
successed in mysql,sqlite
in mssql has error(Keyword 'where' syntax error near);i test in mssql2000,mssql2005,use new and old jdbc, the same result.
stacktrace
Caused by:java.sql.SQLException:com.microsoft.sqlserver.jdbc.SQLServerException:关键字'where'附近有语法错误。Query:,""INSERT INTO maintances(tr_userid,trouble,tr_time) values(?,?,?) Parameters:[1,2,2009-01-01]
at org.apache.commons.dbutils.QueryRunner.rethrow(QueryRunner.java:542)
at org.apache.commons.dbutils.QueryRunner.rethrow(QueryRunner.java:599)
at com.softwarementors.extjs.djn.demo.Maintance.insertMaintance(Maintance.java:49)


","windows xp,tomcat,mssql,mysql,sqlite",604800,604800,,0%,604800,604800,,,21/Jul/10 07:28;hunshencinao;Configurations.java;https://issues.apache.org/jira/secure/attachment/12450038/Configurations.java,21/Jul/10 07:28;hunshencinao;Maintance.java;https://issues.apache.org/jira/secure/attachment/12450039/Maintance.java,21/Jul/10 07:28;hunshencinao;QueryHelper.java;https://issues.apache.org/jira/secure/attachment/12450037/QueryHelper.java,3.0,,,,,,,,,,,,,,,,,,,2010-07-21 06:27:13.317,,,false,,,,,,,,,,,,114714,,,Mon Aug 02 01:28:01 UTC 2010,,,,,,0|i0uvhz:,178244,,,,,,,,,"21/Jul/10 06:27;julien.ayme@gmail.com;Hi,

I don't think this is a DBUTILS issue, rather a SQL issue.
In order to make your code more independant from the database you use, you should specify the columns to insert into:

""INSERT INTO maintances(tr_userid, trouble, tr_time) values(?,?,?)""

Note that you should ask your questions on the user list before creating an issue, if you are not sure this is an issue.

Regards,
Julien","21/Jul/10 07:05;julien.ayme@gmail.com;Could you provide more informations regarding the mssql error, such as the stacktrace ?","21/Jul/10 07:30;hunshencinao;i have attach my java code, and add track trace about this problom","02/Aug/10 01:26;hunshencinao;i have solved it,wo used jtds driver,it's work well.
",02/Aug/10 01:28;hunshencinao;the problem is jdbc error,,,,,,,
"FindBugs reportrs ""bad practice"" in QueryLoader",DBUTILS-64,12440116,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Minor,Cannot Reproduce,,dfabulich,dfabulich,08/Nov/09 01:56,26/Nov/11 18:36,08/Jun/19 23:43,26/Nov/11 18:36,1.1,1.2,1.3,,,0,"Usage of GetResource in org.apache.commons.dbutils.QueryLoader.loadQueries(String) may be unsafe if class is extended
Line 97

http://findbugs.sourceforge.net/bugDescriptions.html#UI_INHERITANCE_UNSAFE_GETRESOURCE
UI: Usage of GetResource may be unsafe if class is extended (UI_INHERITANCE_UNSAFE_GETRESOURCE)

Calling this.getClass().getResource(...) could give results other than expected if this class is extended by a class in another package.

To fix this, I think we'd need to change QueryLoader to allow you to specify the class for relative path handling.",,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2011-11-26 18:36:25.074,,,false,,,,,,,,,,,,114710,,,Sat Nov 26 18:36:25 UTC 2011,,,,,,0|i0uwx3:,178474,,,,,,,,,26/Nov/11 18:36;wspeirs;FindBugs no longer reports this as an issue,,,,,,,,,,,
BasicRowProcessor's CaseInsentitiveHashMap does not work with reflection,DBUTILS-72,12474819,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Minor,Won't Fix,,michael-o,michael-o,22/Sep/10 13:53,10/Apr/11 05:09,08/Jun/19 23:43,10/Apr/11 05:09,1.3,,,,,0,"The map has been declared class private, this causes problems when someone tries to invoke the get method via reflection. I do use the results in the Jakarta Input Taglib which invokes the get via reflection and it fails with illegalaccessexception.

The class has to be made public or decoupled from the row processor.",,,,,,,,,,,,,0.0,,,,,,,,,,,,,,,,,,,2010-09-22 14:48:07.577,,,false,,,,,,,,,,,,114715,,,Sun Apr 10 05:09:22 UTC 2011,,,,,,0|i0uwr3:,178447,,,,,,,,,22/Sep/10 14:48;sebb;What is the use-case for needing to access the nested class?,"22/Sep/10 16:18;michael-o;Sebb,

have a lot at this file:http://svn.apache.org/repos/asf/jakarta/taglibs/deprecated/input/trunk/src/org/apache/taglibs/input/Util.java from line 160. The generic retrieval fails since the class itself ist not public. Reader cannot be invoked on that instance.
This taglib is deprecated but works flawlessly for my projects.",22/Sep/10 16:34;sebb;That seems more like a restriction of the taglib than a bug in DBUTILS.,"22/Sep/10 16:46;michael-o;Why do you think so? I have wrapped this map into a CaseInsensitiveMap of Commons Collections and it worked perfectly. In my opinion, it is the private modifier. The taglib should set privateClass.setAccessable(true) but this is a dirty workaround.","22/Sep/10 16:56;sebb;AFAICT, the nested class is an internal implementation detail, so is not required to be accessible.","22/Sep/10 17:47;michael-o;Sebb, there is no remedy to this but wrapping the map in another one without patching the input taglib?","22/Sep/10 22:47;niallp;IMO this is a bug in the taglib and how its using reflection. If a private class implements a public interface then the method should be accessed through the public interface and this issue won't occur. Commons BeanUtils does this, searching the interface hierarchy if the class is not public.

I believe that taglib is in the attic - but you should be able to get the source code and you could replace the whole of that method with one line:

{code}
    return PropertyUtils.getProperty(bean name);
{code}

Anyway, I don't think DBUtils should change to accomodate a bug in taglibs","23/Sep/10 07:25;michael-o;Niall,

thanks for the insight. I guess the guys from the input taglib did not want to rely on any external libraries. I will patch the appropriate line. At least such information should be prominent somewhere if people try to access the map through reflection.",10/Apr/11 05:09;bayard;Input Taglib is so old that it's probably more a case that the subject didn't come up. Marking this as wontfix.,,,
BeanListHandler should extends AbstractListHandler,DBUTILS-59,12438281,Bug,Closed,DBUTILS,Commons DbUtils,software,issues@commons.apache.org,,http://commons.apache.org/dbutils/,Minor,Invalid,,shgoh,shgoh,16/Oct/09 09:25,03/Nov/09 01:02,08/Jun/19 23:43,03/Nov/09 01:02,1.3,Nightly Builds,,,,0,"Most list handlers - ArrayListHandler, ColumnListHandler, and MapListHandler extends AbstractListHandler, except for BeanListHandler, which implements ResultSetHandler directly.

Perhaps toBeanList method should be removed from RowProcessor interface as well, which seems unneeded.",,300,300,,0%,300,300,,,,,,0.0,,,,,,,,,,,,,,,,,,,2009-10-22 09:38:41.318,,,false,,,,,,,,,,,,114705,,,Tue Nov 03 01:02:55 UTC 2009,,,,,,0|i0uwvj:,178467,,,,,,,,,"22/Oct/09 09:38;julien.ayme@gmail.com;This difference has been added due to issue DBUTILS-37  for optimisation purpose (it was too slow to call the method mapColumnsToProperties for each row returned by the result set).
That's also why there is a toBeanList method in the RowProcessor interface.","03/Nov/09 01:02;dfabulich;Indeed, we did this intentionally.",,,,,,,,,,
